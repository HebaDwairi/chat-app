// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  username String @unique
  fullName String
  profilePicture String
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  conversations ConversationParticipant[]
  messages Message[]

  @@index([username])
}

model Conversation {
  id String @id @default(uuid())
  createdAt DateTime @default(now())

  participants ConversationParticipant[]
  messages Message[]

  @@index([createdAt])
}

model ConversationParticipant {
  user User @relation(fields: [userId], references: [id])
  userId String
  conversation Conversation @relation(fields: [conversationId], references: [id])
  conversationId String

  @@id([userId, conversationId])

  @@index([conversationId])
}

model Message {
  id String @id @default(uuid())
  senderId String
  sender User @relation(fields: [senderId], references: [id])
  conversationId String
  conversation Conversation @relation(fields: [conversationId],references: [id])
  content String
  status MessageStatus @default(SENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([createdAt])
  @@index([conversationId, createdAt])
}


enum MessageStatus {
  SENT
  DELIVERD
  READ
}
